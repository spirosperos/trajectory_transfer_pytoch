#include <evalJ.h>

void _evalJ_ (const Eigen::Ref<JointVector> q, Eigen::Ref<JacobianMatrix> J, const RobotParams& param)
{
  double q1 = q(0);
  double q2 = q(1);
  double q3 = q(2);
  double q4 = q(3);
  double q5 = q(4);
  double q6 = q(5);
  double q7 = q(6);

    double m[6][7];
  double t1;
  double t10;
  double t101;
  double t106;
  double t11;
  double t13;
  double t137;
  double t147;
  double t15;
  double t152;
  double t157;
  double t16;
  double t163;
  double t170;
  double t175;
  double t178;
  double t180;
  double t185;
  double t188;
  double t19;
  double t193;
  double t195;
  double t199;
  double t2;
  double t201;
  double t22;
  double t23;
  double t24;
  double t25;
  double t27;
  double t28;
  double t3;
  double t30;
  double t32;
  double t34;
  double t37;
  double t39;
  double t4;
  double t40;
  double t42;
  double t44;
  double t46;
  double t47;
  double t5;
  double t51;
  double t52;
  double t54;
  double t57;
  double t58;
  double t6;
  double t61;
  double t65;
  double t67;
  double t69;
  double t75;
  double t78;
  double t8;
  double t82;
  double t86;
  double t90;
  double t96;
  m[0][0] = 0;
  m[0][1] = 0;
  m[0][2] = 0;
  m[0][3] = 0;
  m[0][4] = 0;
  m[0][5] = 0;
  m[0][6] = 0;
  m[1][0] = 0;
  m[1][1] = 0;
  m[1][2] = 0;
  m[1][3] = 0;
  m[1][4] = 0;
  m[1][5] = 0;
  m[1][6] = 0;
  m[2][0] = 0;
  m[2][1] = 0;
  m[2][2] = 0;
  m[2][3] = 0;
  m[2][4] = 0;
  m[2][5] = 0;
  m[2][6] = 0;
  m[3][0] = 0;
  m[3][1] = 0;
  m[3][2] = 0;
  m[3][3] = 0;
  m[3][4] = 0;
  m[3][5] = 0;
  m[3][6] = 0;
  m[4][0] = 0;
  m[4][1] = 0;
  m[4][2] = 0;
  m[4][3] = 0;
  m[4][4] = 0;
  m[4][5] = 0;
  m[4][6] = 0;
  m[5][0] = 0;
  m[5][1] = 0;
  m[5][2] = 0;
  m[5][3] = 0;
  m[5][4] = 0;
  m[5][5] = 0;
  m[5][6] = 0;
  t1 = cos(q5);
  t2 = sin(q2);
  t3 = t2 * t1;
  t4 = param.d7 + param.d8;
  t5 = sin(q6);
  t6 = t5 * t4;
  t8 = cos(q6);
  t10 = t4 * t8 + param.d5 + param.d6;
  t11 = cos(q2);
  t13 = cos(q3);
  t15 = t10 * t11 * t13 - t3 * t6;
  t16 = sin(q4);
  t19 = cos(q4);
  t22 = sin(q5);
  t23 = sin(q3);
  t24 = t23 * t22;
  t25 = t1 * t13 * t19 - t24;
  t27 = t5 * t25 * t4 * t11;
  t28 = t19 * t10;
  t30 = (t28 + param.d3 + param.d4) * t2;
  t32 = sin(q1);
  t34 = cos(q1);
  t37 = t23 * t1;
  t39 = t13 * t22;
  t40 = t19 * t37 + t39;
  t42 = -t10 * t16 * t23 + t40 * t6;
  m[0][0] = t32 * (t15 * t16 - t27 - t30) - t42 * t34;
  t44 = t5 * t1;
  t46 = t16 * t4 * t44;
  t47 = t28 + t46 + param.d3 + param.d4;
  t51 = t19 * t4 * t44;
  t52 = -t10 * t16 + t51;
  t54 = t6 * t24;
  t57 = t11 * t47 - (t13 * t52 - t54) * t2;
  m[0][1] = t57 * t34;
  t58 = -t52;
  t61 = t23 * t58 - t39 * t6;
  t65 = t13 * t58 + t54;
  m[0][2] = t11 * t34 * t61 + t32 * t65;
  t67 = -t15;
  t69 = t13 * t1;
  t75 = t19 * t67 - (t11 * t6 * t69 + t10 * t2) * t16;
  t78 = t46 + t28;
  m[0][3] = t23 * t32 * t78 + t34 * t75;
  t82 = t16 * t2;
  t86 = t22 * (t11 * t13 * t19 + t82) + t11 * t37;
  t90 = -t19 * t22 * t23 + t69;
  m[0][4] = -(t32 * t90 + t34 * t86) * t6;
  t96 = t11 * t25 + t16 * t3;
  t101 = t11 * t13 * t16 - t19 * t2;
  t106 = t16 * t23;
  m[0][5] = (t34 * (t101 * t5 + t8 * t96) - (t106 * t5 + t40 * t8) * t32) * t4;
  m[0][6] = 0.0e0;
  m[1][0] = t34 * (t16 * t67 + t27 + t30) - t42 * t32;
  m[1][1] = t32 * t57;
  m[1][2] = t34 * (t13 * (t16 * (-t4 * t8 - param.d5 - param.d6) + t51) - t54) + t11 * t32 * t61;
  m[1][3] = -t23 * t34 * t78 + t32 * t75;
  m[1][4] = -(t32 * t86 - t34 * t90) * t6;
  t137 = t34 * t106;
  m[1][5] = (t8 * (t32 * t96 + t34 * t40) + (t101 * t32 + t137) * t5) * t4;
  m[1][6] = 0.0e0;
  m[2][0] = 0.0e0;
  m[2][1] = t11 * t65 - t2 * t47;
  m[2][2] = -t61 * t2;
  m[2][3] = t13 * t2 * t78 + t11 * t52;
  t147 = t13 * t2;
  t152 = t23 * t2;
  m[2][4] = t4 * t5 * (t22 * (-t11 * t16 + t147 * t19) + t1 * t152);
  t157 = t16 * t1;
  t163 = t11 * t19 + t147 * t16;
  m[2][5] = -(t8 * (-t11 * t157 + t2 * t25) + t5 * t163) * t4;
  m[2][6] = 0.0e0;
  m[3][0] = 0.0e0;
  m[3][1] = -t32;
  m[3][2] = t2 * t34;
  m[3][3] = t11 * t23 * t34 + t13 * t32;
  t170 = -t101;
  m[3][4] = t106 * t32 + t170 * t34;
  t175 = -t13 * t19 * t22 - t37;
  t178 = t11 * t175 - t22 * t82;
  t180 = -t90;
  m[3][5] = t178 * t34 + t180 * t32;
  t185 = t1 * t19 * t5 - t16 * t8;
  t188 = t22 * t23 * t5;
  t193 = t157 * t5 + t19 * t8;
  t195 = t11 * (t13 * t185 - t188) + t193 * t2;
  t199 = -t185;
  t201 = -t13 * t22 * t5 + t199 * t23;
  m[3][6] = t195 * t34 + t201 * t32;
  m[4][0] = 0.0e0;
  m[4][1] = t34;
  m[4][2] = t2 * t32;
  m[4][3] = t11 * t23 * t32 - t13 * m[4][1];
  m[4][4] = t170 * t32 - t137;
  m[4][5] = t178 * t32 - t180 * m[4][1];
  m[4][6] = t195 * t32 - t201 * m[4][1];
  m[5][0] = 0.1e1;
  m[5][1] = 0.0e0;
  m[5][2] = t11;
  m[5][3] = -t152;
  m[5][4] = t163;
  m[5][5] = -t16 * t22 * m[5][2] - t175 * t2;
  m[5][6] = t2 * (t13 * t199 + t188) + t193 * m[5][2];

  for(int i = 0; i < J.rows(); ++i)
  {
    for(int j = 0; j < J.cols(); ++j)
    {
      J(i, j) = m[i][j];
    }
  }
  //J = JacobianMatrix(&(m[0][0]));
}
